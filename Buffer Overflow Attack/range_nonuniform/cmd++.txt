[06/16/22]seed@VM:~/practice$ ls
first  second  third
[06/16/22]seed@VM:~/practice$ cd third/
[06/16/22]seed@VM:~/.../third$ ls
badfile  exploit.py                  stack    stack_dbg
cmd.txt  peda-session-stack_dbg.txt  stack.c
[06/16/22]seed@VM:~/.../third$ gdb st
stack                 startx                strace-log-merge
stack.c               stat                  strings
stack_dbg             static-sh             strip
start-pulseaudio-x11  stdbuf                stty
start-stop-daemon     strace                
[06/16/22]seed@VM:~/.../third$ gdb stack_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from stack_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x12ad: file stack.c, line 16.
gdb-peda$ run
Starting program: /home/seed/practice/third/stack_dbg 
Input size: 500
[----------------------------------registers-----------------------------------]
EAX: 0xffffcb28 --> 0x0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x60 ('`')
EDX: 0xffffcf10 --> 0xf7fb4000 --> 0x1e6d6c 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffcf18 --> 0xffffd148 --> 0x0 
ESP: 0xffffcb0c --> 0x565563ee (<dummy_function+62>:	add    esp,0x10)
EIP: 0x565562ad (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a4 <frame_dummy+4>:	jmp    0x56556200 <register_tm_clones>
   0x565562a9 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x565562ac <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x565562ad <bof>:	endbr32 
   0x565562b1 <bof+4>:	push   ebp
   0x565562b2 <bof+5>:	mov    ebp,esp
   0x565562b4 <bof+7>:	push   ebx
   0x565562b5 <bof+8>:	sub    esp,0x74
[------------------------------------stack-------------------------------------]
0000| 0xffffcb0c --> 0x565563ee (<dummy_function+62>:	add    esp,0x10)
0004| 0xffffcb10 --> 0xffffcf33 --> 0xcbf89090 
0008| 0xffffcb14 --> 0x0 
0012| 0xffffcb18 --> 0x3e8 
0016| 0xffffcb1c --> 0x565563c3 (<dummy_function+19>:	add    eax,0x2bf5)
0020| 0xffffcb20 --> 0x0 
0024| 0xffffcb24 --> 0x0 
0028| 0xffffcb28 --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffcfincomplete sequence \313>...) at stack.c:16
16	{
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x60 ('`')
EDX: 0xffffcf10 --> 0xf7fb4000 --> 0x1e6d6c 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffcb08 --> 0xffffcf18 --> 0xffffd148 --> 0x0 
ESP: 0xffffca90 ("1pUV$\317\377\377\220\325\377\367\340\263\374", <incomplete sequence \367>)
EIP: 0x565562c2 (<bof+21>:	sub    esp,0x8)
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562b5 <bof+8>:	sub    esp,0x74
   0x565562b8 <bof+11>:	call   0x565563f7 <__x86.get_pc_thunk.ax>
   0x565562bd <bof+16>:	add    eax,0x2cfb
=> 0x565562c2 <bof+21>:	sub    esp,0x8
   0x565562c5 <bof+24>:	push   DWORD PTR [ebp+0x8]
   0x565562c8 <bof+27>:	lea    edx,[ebp-0x6c]
   0x565562cb <bof+30>:	push   edx
   0x565562cc <bof+31>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffca90 ("1pUV$\317\377\377\220\325\377\367\340\263\374", <incomplete sequence \367>)
0004| 0xffffca94 --> 0xffffcf24 --> 0x1f4 
0008| 0xffffca98 --> 0xf7ffd590 --> 0xf7fd1000 --> 0x464c457f 
0012| 0xffffca9c --> 0xf7fcb3e0 --> 0xf7ffd990 --> 0x56555000 --> 0x464c457f 
0016| 0xffffcaa0 --> 0x0 
0020| 0xffffcaa4 --> 0x0 
0024| 0xffffcaa8 --> 0x0 
0028| 0xffffcaac --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
20	    strcpy(buffer, str);       
gdb-peda$ p $ebp
$1 = (void *) 0xffffcb08
gdb-peda$ p &buffer
$2 = (char (*)[100]) 0xffffca9c
gdb-peda$ p/d 0xffffcb08 - 0xffffca9c
$3 = 108
gdb-peda$ q
[06/16/22]seed@VM:~/.../third$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/16/22]seed@VM:~/.../third$ sudo ln -sf /bin/zsh /bin/sh
[06/16/22]seed@VM:~/.../third$ su root
Password: 
root@VM:/home/seed/practice/third# gcc -DBUF_SIZE=161 -m32 -o stack -z execstack -fno-stack-protector stack.c
root@VM:/home/seed/practice/third# sudo chown root stack
root@VM:/home/seed/practice/third# sudo chmod 4755 stack
root@VM:/home/seed/practice/third# su seed
[06/16/22]seed@VM:~/.../third$ rm badfile 
[06/16/22]seed@VM:~/.../third$ touch badfile
[06/16/22]seed@VM:~/.../third$ gcc -DBUF_SIZE=161 -m32 -o stack_dbg -g -z execstack -fno-stack-protector stack.
gcc: error: stack.: No such file or directory
gcc: fatal error: no input files
compilation terminated.
[06/16/22]seed@VM:~/.../third$ gcc -DBUF_SIZE=161 -m32 -o stack_dbg -g -z execstack -fno-stack-protector stack.c
[06/16/22]seed@VM:~/.../third$ gdb stack_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from stack_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x12ad: file stack.c, line 16.
gdb-peda$ run
Starting program: /home/seed/practice/third/stack_dbg 
Input size: 0
[----------------------------------registers-----------------------------------]
EAX: 0xffffcb18 --> 0x0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x60 ('`')
EDX: 0xffffcf00 --> 0xf7fb4000 --> 0x1e6d6c 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffcf08 --> 0xffffd138 --> 0x0 
ESP: 0xffffcafc --> 0x565563f4 (<dummy_function+62>:	add    esp,0x10)
EIP: 0x565562ad (<bof>:	endbr32)
EFLAGS: 0x292 (carry parity ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a4 <frame_dummy+4>:	jmp    0x56556200 <register_tm_clones>
   0x565562a9 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x565562ac <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x565562ad <bof>:	endbr32 
   0x565562b1 <bof+4>:	push   ebp
   0x565562b2 <bof+5>:	mov    ebp,esp
   0x565562b4 <bof+7>:	push   ebx
   0x565562b5 <bof+8>:	sub    esp,0xb4
[------------------------------------stack-------------------------------------]
0000| 0xffffcafc --> 0x565563f4 (<dummy_function+62>:	add    esp,0x10)
0004| 0xffffcb00 --> 0xffffcf23 --> 0x456 
0008| 0xffffcb04 --> 0x0 
0012| 0xffffcb08 --> 0x3e8 
0016| 0xffffcb0c --> 0x565563c9 (<dummy_function+19>:	add    eax,0x2bef)
0020| 0xffffcb10 --> 0x0 
0024| 0xffffcb14 --> 0x0 
0028| 0xffffcb18 --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (str=0xffffcf23 "V\004") at stack.c:16
16	{
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x60 ('`')
EDX: 0xffffcf00 --> 0xf7fb4000 --> 0x1e6d6c 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffcaf8 --> 0xffffcf08 --> 0xffffd138 --> 0x0 
ESP: 0xffffca40 --> 0x0 
EIP: 0x565562c5 (<bof+24>:	sub    esp,0x8)
EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562b5 <bof+8>:	sub    esp,0xb4
   0x565562bb <bof+14>:	call   0x565563fd <__x86.get_pc_thunk.ax>
   0x565562c0 <bof+19>:	add    eax,0x2cf8
=> 0x565562c5 <bof+24>:	sub    esp,0x8
   0x565562c8 <bof+27>:	push   DWORD PTR [ebp+0x8]
   0x565562cb <bof+30>:	lea    edx,[ebp-0xa9]
   0x565562d1 <bof+36>:	push   edx
   0x565562d2 <bof+37>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffca40 --> 0x0 
0004| 0xffffca44 --> 0x0 
0008| 0xffffca48 --> 0xffffffb4 
0012| 0xffffca4c --> 0x0 
0016| 0xffffca50 --> 0x0 
0020| 0xffffca54 --> 0x0 
0024| 0xffffca58 --> 0xf7fb4f20 --> 0x0 
0028| 0xffffca5c --> 0x7d4 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
20	    strcpy(buffer, str);       
gdb-peda$ p $ebp
$1 = (void *) 0xffffcaf8
gdb-peda$ p &buffer
$2 = (char (*)[161]) 0xffffca4f
gdb-peda$ p/d 0xffffcaf8 - 0xffffca4f
$3 = 169
gdb-peda$ 169 mod 4
Undefined command: "169".  Try "help".
gdb-peda$ 169 %  4
Undefined command: "169".  Try "help".
gdb-peda$ 169 %  4 = 1 so we need to do [ for i in range(1, 224, L):]


